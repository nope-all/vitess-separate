# version: "2.1"
version: "3.8"
services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    ports:
      - "2379:2379"
  # This is a convenience container to quickly test vitess against an external database.
  # In practice you will point Vitess to your existing database and migrate to a Vitess managed cluster.
  external_db_host:
    build:
      context: ./external_db/mysql
      dockerfile: Dockerfile
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-pass}
      MYSQL_DATABASE: ${DB:-commerce}
      MYSQL_USER: ${DB_USER:-external_db_user}
      MYSQL_PASSWORD: ${DB_PASS:-external_db_password}
    volumes:
      - ./external_db/mysql/:/docker-entrypoint-initdb.d/
      - ./external_db/mysql/log:/var/log/mysql
    command:
      - --server-id=1
      - --log-bin=mysql-bin
      - --gtid_mode=ON
      - --enforce_gtid_consistency
      - --general_log=1
      - --slow_query_log=1
      - --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=$${MYSQL_ROOT_PASSWORD} --execute \"SHOW DATABASES;\""
      timeout: 10s
      retries: 10
    ports:
      - "3306"

  vtctld:
    image: vitess/lite:v20.0.0
    ports:
      - "15000:$WEB_PORT"
      - "$GRPC_PORT"
    command: ["sh", "-c", " /vt/bin/vtctld \
        $TOPOLOGY_FLAGS \
        --cell $CELL \
        --service_map 'grpc-vtctl,grpc-vtctld' \
        --backup_storage_implementation file \
        --file_backup_storage_root /vt/vtdataroot/backups \
        --logtostderr=true \
        --port $WEB_PORT \
        --grpc_port $GRPC_PORT
        "]
    depends_on:
      - etcd
#    depends_on:
      - external_db_host
#        condition: service_healthy

  vtgate:
    image: vitess/lite:v20.0.0
    ports:
      - "15099:$WEB_PORT"
      - "$GRPC_PORT"
      - "15306:$MYSQL_PORT"
    command: ["sh", "-c", "/vt/bin/vtgate \
        $TOPOLOGY_FLAGS \
        --logtostderr=true \
        --port $WEB_PORT \
        --grpc_port $GRPC_PORT \
        --mysql_server_port $MYSQL_PORT \
        --mysql_auth_server_impl none \
        --cell $CELL \
        --cells_to_watch $CELL \
        --tablet_types_to_wait PRIMARY,REPLICA \
        --service_map 'grpc-vtgateservice' \
        --enable_system_settings=true \
        "]
    volumes:
      - ".:/script"
    environment:
      - KEYSPACE
      - DB
    depends_on:
      - vtctld
#    depends_on:
      - vttablet101
        #condition: service_healthy

  schemaload:
    image: vitess/lite:v20.0.0
    command:
    - sh
    - -c
    - /script/schemaload.sh
    environment:
    - TOPOLOGY_FLAGS
    - WEB_PORT
    - GRPC_PORT
    - CELL
    - KEYSPACE
    - TARGETTAB
    - SLEEPTIME
    - VSCHEMA_FILE
    - SCHEMA_FILES
    - POST_LOAD_FILE
    - EXTERNAL_DB
    volumes:
    - .:/script
    depends_on:
      vttablet101:
        condition: service_healthy

  set_keyspace_durability_policy:
    command:
      - sh
      - -c
      - /script/set_keyspace_durability_policy.sh
    depends_on:
      - vtctld
    environment:
      - KEYSPACES=$KEYSPACE
      - GRPC_PORT=15999
    image: vitess/lite:v20.0.0
    volumes:
      - .:/script

  vttablet100:
    image: vitess/lite:v20.0.0
    ports:
      - "15100:$WEB_PORT"
      - "$GRPC_PORT"
      - "3306"
    volumes:
      - ".:/script"
      - "./backups:/vt/vtdataroot/backups"
    environment:
      - TOPOLOGY_FLAGS
      - WEB_PORT
      - GRPC_PORT
      - CELL
      - KEYSPACE
      - DB
      - EXTERNAL_DB
      - DB_PORT
      - DB_HOST
      - DB_USER
      - DB_PASS
      - DB_CHARSET
      - ROLE=primary
    command: ["sh", "-c", "[ $$EXTERNAL_DB -eq 1 ] && /script/vttablet-up.sh 100 || exit 0"]
    depends_on:
      # - vtctld
      - set_keyspace_durability_policy
    healthcheck:
      test: ["CMD-SHELL","curl -s --fail --show-error localhost:$$WEB_PORT/debug/health"]
      interval: 30s
      timeout: 10s
      retries: 15

  vttablet101:
    image: vitess/lite:v20.0.0
    ports:
      - "15101:$WEB_PORT"
      - "$GRPC_PORT"
      - "3306"
    volumes:
      - ".:/script"
      - "./backups:/vt/vtdataroot/backups"
    environment:
      - TOPOLOGY_FLAGS
      - WEB_PORT
      - GRPC_PORT
      - CELL
      - KEYSPACE
      - DB
      - EXTERNAL_DB
      - DB_PORT
      - DB_HOST
      - DB_USER
      - DB_PASS
      - DB_CHARSET
      - ROLE=primary
    command: ["sh", "-c", "[ $$EXTERNAL_DB -eq 1 ] && /script/vttablet-up.sh 101"]
    depends_on:
      - vtctld
    healthcheck:
      test: ["CMD-SHELL","curl -s --fail --show-error localhost:$$WEB_PORT/debug/health"]
      interval: 30s
      timeout: 10s
      retries: 15

  vttablet102:
    image: vitess/lite:v20.0.0
    ports:
      - "15102:$WEB_PORT"
      - "$GRPC_PORT"
      - "3306"
    volumes:
      - ".:/script"
      - "./backups:/vt/vtdataroot/backups"
    environment:
      - TOPOLOGY_FLAGS
      - WEB_PORT
      - GRPC_PORT
      - CELL
      - KEYSPACE
      - DB
      - EXTERNAL_DB
      - DB_PORT
      - DB_HOST
      - DB_USER
      - DB_PASS
      - DB_CHARSET
    command: ["sh", "-c", "/script/vttablet-up.sh 102"]
    depends_on:
      - vtctld
      - vttablet101
    healthcheck:
      test: ["CMD-SHELL","curl -s --fail --show-error localhost:$$WEB_PORT/debug/health"]
      interval: 30s
      timeout: 10s
      retries: 15

  vttablet103:
    image: vitess/lite:v20.0.0
    ports:
      - "15103:$WEB_PORT"
      - "$GRPC_PORT"
      - "3306"
    volumes:
      - ".:/script"
      - "./backups:/vt/vtdataroot/backups"
    environment:
      - TOPOLOGY_FLAGS
      - WEB_PORT
      - GRPC_PORT
      - CELL
      - KEYSPACE
      - DB
      - EXTERNAL_DB
      - DB_PORT
      - DB_HOST
      - DB_USER
      - DB_PASS
      - DB_CHARSET
    command: ["sh", "-c", "/script/vttablet-up.sh 103"]
    depends_on:
      - vtctld
      - vttablet101
    healthcheck:
      test: ["CMD-SHELL","curl -s --fail --show-error localhost:$$WEB_PORT/debug/health"]
      interval: 30s
      timeout: 10s
      retries: 15

  vtorc:
    image: vitess/lite:v20.0.0
    command: ["sh", "-c", "/script/vtorc-up.sh"]
    depends_on:
      - vtctld
      - set_keyspace_durability_policy
    ports:
      - "13000:8080"
    volumes:
      - ".:/script"
    environment:
      - WEB_PORT=8080
      - TOPOLOGY_FLAGS
      - WEB_PORT
      - GRPC_PORT
      - CELL
      - KEYSPACE
      - DB
      - EXTERNAL_DB
      - DB_PORT
      - DB_HOST
      - DB_USER
      - DB_PASS
      - DB_CHARSET
    healthcheck:
      test: ["CMD-SHELL","curl -s --fail --show-error localhost:8080/debug/health"]
      interval: 5s
      timeout: 10s
      retries: 15

  vreplication:
    image: vitess/lite:v20.0.0
    volumes:
      - ".:/script"
    environment:
      - TOPOLOGY_FLAGS
      - WEB_PORT
      - GRPC_PORT
      - CELL
      - KEYSPACE
      - DB
      - EXTERNAL_DB
      - DB_PORT
      - DB_HOST
      - DB_USER
      - DB_PASS
      - DB_CHARSET
    command: ["sh", "-c", "[ $$EXTERNAL_DB -eq 1 ] && /script/externaldb_vreplication.sh || exit 0"]
    depends_on:
      - vtctld

  vtadmin:
    image: nauvalh/vtadmin:v20.0.0
    hostname: 103.186.1.45
    ports:
      - "14200:14200"
      - "14201:14201"
    volumes:
      - ".:/script"
      - "./backups:/vt/vtdataroot/backups"
      - "vtadmin-data:/vt/vtadmin"
      - "vtadmin-src:/var/www"
    tty: true
    # command: ["sh", "-c", "/vt/bin/vtadmin \
    #     --addr '0.0.0.0:14200' \
    #     --http-origin 'http://116.193.190.235:14201' \
    #     --http-tablet-url-tmpl 'http://{{ .Tablet.Hostname }}:15{{ .Tablet.Alias.Uid }}' \
    #     --tracer 'opentracing-jaeger' \
    #     --grpc-tracing \
    #     --http-tracing \
    #     --logtostderr \
    #     --alsologtostderr \
    #     --rbac \
    #     --rbac-config='/vt/vtadmin/rbac.yaml' \
    #     --cluster 'id=external,name=external,discovery=staticfile,discovery-staticfile-path=/vt/vtadmin/discovery.json,tablet-fqdn-tmpl=http://{{ .Tablet.Hostname }}:15{{ .Tablet.Alias.Uid }}' 
    #     "]

volumes:
  vtadmin-src:
  vtadmin-data: